package Lab1And2;

public class test {
    public static void main(String[] args) {
        HugeInteger x1;
        HugeInteger x2;
        HugeInteger x3;

        //String constructor test cases 
        //Valid inputs 

        try {

            x1 = new HugeInteger("12345678");
            x1 = new HugeInteger("7097209430973667806014363363584489148645");
            x1 = new HugeInteger("-7097209430973667806014363363584489148645");
            x1 = new HugeInteger("0000007097209430973667806014363363584489148645");
            x1 = new HugeInteger("-0000007097209430973667806014363363584489148645");
        } catch (Exception e) {
            System.out.println("String constructor throws exception for valid input\n");
        }

        //Invalid Inputs 
        try {
            x1 = new HugeInteger("7097209430973667806-014363363584489148645");
        } catch (Exception e) {
            System.out.println("S1: String in the middle exception caught\n");
        }
        try {
            x1 = new HugeInteger("7097209430973667806014363363584489148645!");
        } catch (Exception e) {
            System.out.println("S2: String at the end exception caught\n");
        }
        try {
            x1 = new HugeInteger(",7097209430973667806014363363584489148645");
        } catch (Exception e) {
            System.out.println("S3: String in the beginning exception caught\n");
        }
        try {
            x1 = new HugeInteger("000-7097209430973667806014363363584489148645");
        } catch (Exception e) {
            System.out.println("S4: String with leading zeros exception caught\n");
        }
        try {
            x1 = new HugeInteger("-,7097209430973667806014363363584489148645");
        } catch (Exception e) {
            System.out.println("S5: Negative String with exception caught\n");
        }
        try {
            x1 = new HugeInteger("");
        } catch (Exception e) {
            System.out.println("S6: Empty String exception caught\n");
        }

        //Random Constructor Test cases 

        try {
            x1 = new HugeInteger(10);
            x1 = new HugeInteger(100);
        } catch (Exception e) {
            System.out.println("Random constructor throws exception for valid input");
        }

        try {
            x1 = new HugeInteger(0);
        } catch (Exception e) {
            System.out.println("R1: Size zero exception caught\n");
        }
        try {
            x1 = new HugeInteger(-12);
        } catch (Exception e) {
            System.out.println("R2: Negative size exception caught\n");
        }


        //Addition Test Cases

        try {
            x2 = new HugeInteger("7097209430973667806014363363584489148645");
            x1 = new HugeInteger("7591288613343499721604268808153579967226");
            x3 = x1.add(x2);
            System.out.println(x1.toString());
            System.out.println(x2.toString());
            System.out.println(x3.toString());
            System.out.println();
            x2 = new HugeInteger("9811943522878929789833327008017571604735");
            x1 = new HugeInteger("27224374369720602368");
            x3 = x1.add(x2);
            System.out.println(x1.toString());
            System.out.println(x2.toString());
            System.out.println(x3.toString());
            System.out.println();
            System.out.println();
            x2 = new HugeInteger("70289496792964864710");
            x1 = new HugeInteger("4153692393666040698634991664372669429691");
            x3 = x1.add(x2);
            System.out.println(x1.toString());
            System.out.println(x2.toString());
            System.out.println(x3.toString());
            System.out.println();
            System.out.println();
            x2 = new HugeInteger("99999999999999999999999999");
            x1 = new HugeInteger("99999999999999999999999999");
            x3 = x1.add(x2);
            System.out.println(x1.toString());
            System.out.println(x2.toString());
            System.out.println(x3.toString());
            System.out.println();
            System.out.println();
            x2 = new HugeInteger("11");
            x1 = new HugeInteger("99999999999999999999999999");
            x3 = x1.add(x2);
            System.out.println(x1.toString());
            System.out.println(x2.toString());
            System.out.println(x3.toString());
            System.out.println();
            System.out.println();

        } catch (Exception e) {
            System.out.println("Exception generated by the class for valid test cases");
            System.out.println("Invalid input for HugeInteger");
            System.out.println("Required: String equivalent of integer");
        }
    }
}
